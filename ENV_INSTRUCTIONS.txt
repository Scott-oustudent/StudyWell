StudyWell environment variables and quick setup

This file contains the env variable examples, short explanations, and PowerShell commands to create .env files for both the frontend (Vite) and the server.

--- FRONTEND (.env at project root) ---
Purpose: client-side settings. Only variables prefixed with VITE_ are exposed to the browser.

VITE_SUPABASE_URL=https://your-supabase-url.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key
VITE_ENABLE_SUPABASE=false
VITE_PAYPAL_CLIENT_ID=your-paypal-client-id-for-frontend-sdk
SUBSCRIPTION_PRICE=9.99
SUBSCRIPTION_CURRENCY=GBP

Notes:
- Set VITE_ENABLE_SUPABASE=true when you want the app to use Supabase from the browser.
- VITE_PAYPAL_CLIENT_ID is optional; real payment operations are handled on the server.

--- SERVER (server/.env) ---
Purpose: server-side secrets (do NOT prefix with VITE_). Place at server/.env

PAYPAL_CLIENT_ID=your-paypal-client-id
PAYPAL_SECRET=your-paypal-secret
PAYPAL_BASE=https://api-m.sandbox.paypal.com

SUPABASE_URL=https://your-supabase-url.supabase.co
SUPABASE_SERVICE_KEY=your-service-role-key

SUBSCRIPTION_PRICE=12.99
SUBSCRIPTION_CURRENCY=GBP

# SMTP (optional) - leave blank to use dev fallback (token returned in response)
SMTP_HOST=smtp.mailtrap.io
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-smtp-username
SMTP_PASS=your-smtp-password
SMTP_FROM=no-reply@yourdomain.com

APP_BASE_URL=http://localhost:3000
PORT=4000

Notes:
- SUPABASE_SERVICE_KEY should be the service_role key (server-only) so the server can insert into payments, audit_logs, email_confirmations.
- If SMTP is missing, the register endpoint will return the confirmation token in the response to support manual confirmation in dev.

--- HOW TO CREATE THESE FILES (PowerShell) ---
Run these in PowerShell from project root (edit placeholders first):

Create frontend .env:
@'
VITE_SUPABASE_URL=https://your-supabase-url.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key
VITE_ENABLE_SUPABASE=false
VITE_PAYPAL_CLIENT_ID=your-paypal-client-id-for-frontend-sdk
SUBSCRIPTION_PRICE=9.99
SUBSCRIPTION_CURRENCY=GBP
'@ | Set-Content -Path .env -Encoding UTF8

Create server .env:
@'
PAYPAL_CLIENT_ID=your-paypal-client-id
PAYPAL_SECRET=your-paypal-secret
PAYPAL_BASE=https://api-m.sandbox.paypal.com

SUPABASE_URL=https://your-supabase-url.supabase.co
SUPABASE_SERVICE_KEY=your-service-role-key

SUBSCRIPTION_PRICE=9.99
SUBSCRIPTION_CURRENCY=GBP

SMTP_HOST=smtp.mailtrap.io
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-smtp-username
SMTP_PASS=your-smtp-password
SMTP_FROM=no-reply@yourdomain.com

APP_BASE_URL=http://localhost:3000

PORT=4000
'@ | Set-Content -Path .\server\.env -Encoding UTF8

--- RUN THE SERVER & FRONTEND (PowerShell) ---
# Install and start server
cd C:\Users\scott\Downloads\studywell\server
npm install
node index.js

# In a separate terminal, start frontend (project root)
cd C:\Users\scott\Downloads\studywell
npm install
npm run dev

Notes:
- Restart processes after changing env files.
- server logs will warn about missing PayPal or Supabase envs if not set.

--- MIGRATION ---
I added a migration file at server/migrations/001_create_tables.sql. Run it in your Supabase project SQL editor to create tables:
- users
- payments
- email_confirmations
- audit_logs

--- WHERE TO GET KEYS ---
- Supabase: Project Settings → API
  - URL (SUPABASE_URL)
  - anon key (VITE_SUPABASE_ANON_KEY)
  - service_role key (SUPABASE_SERVICE_KEY) — keep server-only
- PayPal (sandbox): developer.paypal.com → My Apps & Credentials → create sandbox app → copy Client ID + Secret
- SMTP: Mailtrap, SendGrid, Postmark, SES, etc.

--- CHECKLIST (minimum to test end-to-end)
- [ ] Run the SQL migration in Supabase
- [ ] Put SUPABASE_URL and SUPABASE_SERVICE_KEY into server/.env
- [ ] Put PAYPAL_CLIENT_ID and PAYPAL_SECRET into server/.env
- [ ] Optionally set SMTP_* if you want real email deliveries
- [ ] Start server and frontend and test register -> confirm and payment flows

--- SECURITY REMINDERS ---
- Never commit server/.env or .env with real secrets to git. Add them to .gitignore.
- Use the Supabase service role key only on the server.

If you want me to create these .env files for you in the repo with placeholders filled from values you paste here, I can do that — but do NOT paste real secrets unless you want them written into the workspace files. Alternatively I can add a migration runner script to apply the SQL automatically if you provide the service key at runtime.

End of ENV_INSTRUCTIONS.txt
